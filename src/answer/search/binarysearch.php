<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>binarysearch</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css">
</head>
<body>

  <?php
    // $aに数字の配列が格納されています。
    // ２分探索の過程を出力するプログラムを書いて下さい。

    // ex 配列に0~20の値を格納し、16を探索する場合
    // 0が左端の番号です。10が真ん中の番号です。20が右端の番号です。
    // 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    // 10と16を比較します。
    // 一致しません。
    // 11が左端の番号です。15が真ん中の番号です。20が右端の番号です。
    // 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    // 15と16を比較します。
    // 一致しません。
    // 16が左端の番号です。18が真ん中の番号です。20が右端の番号です。
    // 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    // 18と16を比較します。
    // 一致しません。
    // 16が真ん中の番号です。16が左端の番号です。17が右端の番号です。
    // 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    // 16と16を比較します。
    // 一致しました。終了します。
    // 見つかった番号=16
    // ※上の出力はあくまで例です。ご自分でわかりやすい出力に書き換えて下さっても構いません。

// 検索するソート済みの配列データです
  $a=0;
  $b=20;


  $c = range($a, $b);//昇順の数を指定
  $request=15;//探す値

  $first=0;//$cの最初の値
  $last=count($c)-1;//$cの最後の値
  $index=null;//探す値のキー


  while ($first<=$last) {//最初の値と最後の値の中に探す値があるときに繰り返す
    $center=floor(($last+$first)/2);//真ん中の数値
    echo '['.$a.']'.'が左端の番号です。'.'['.$center.']'.'が真ん中の番号です。'.'['.$b.']'.'が左端の番号です。';
    echo '<br>';
    echo $c[$center].'と'.$request.'を比較します'.'<br>';
    if ($c[$center]==$request) {//真ん中の数値と探す数値が一緒
      echo '一致しました。終了します。'.'<br>';
      $index=$center;
      break;
    }elseif ($c[$center]<$request) {//探す数値より真ん中の数値のほうが小さい
      echo '一致しません'.'<br>';
      $first=$center+1;//探す範囲が真ん中より１つ大きくなる
    }else {//探す数値より真ん中の数値のほうが大きい
      echo '一致しません'.'<br>';
      $last=$center-1;//探す範囲が真ん中より一つ小さくなる
    }
  }
  
  echo '見つかった番号＝'.$c[$index];


?>

</body>
</html>