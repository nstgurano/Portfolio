<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>binarysearch</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css">
</head>
<body>

  <?php
    // $aに数字の配列が格納されています。
    // ２分探索の過程を出力するプログラムを書いて下さい。

    // ex 配列に0~20の値を格納し、16を探索する場合
    // 0が左端の番号です。10が真ん中の番号です。20が右端の番号です。
    // 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    // 10と16を比較します。
    // 一致しません。
    // 11が左端の番号です。15が真ん中の番号です。20が右端の番号です。
    // 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    // 15と16を比較します。
    // 一致しません。
    // 16が左端の番号です。18が真ん中の番号です。20が右端の番号です。
    // 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    // 18と16を比較します。
    // 一致しません。
    // 16が真ん中の番号です。16が左端の番号です。17が右端の番号です。
    // 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
    // 16と16を比較します。
    // 一致しました。終了します。
    // 見つかった番号=16
    // ※上の出力はあくまで例です。ご自分でわかりやすい出力に書き換えて下さっても構いません。

// 検索するソート済みの配列データです
    $a = range(0, 20);
    $b = count($a);
    $center = ceil($b/2);
    $request=5;

    $first=0;
    $last=$b-1;

    $left=[];
    $right=[];

    while ($first<=$last) {

      while ($a[$last]>$a[$center]) {//
        $last--;
      }

      while ($a[$first]<$a[$center]) {//
        $first++;
      }
      $left[]=$a[$first];//
      $right[]=$a[$last];
    }
    var_dump($right);

?>

</body>
</html>